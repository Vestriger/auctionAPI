"""newdatabase1

Revision ID: 5412c1a0738d
Revises: d9ab3e2cdd15
Create Date: 2023-12-10 00:19:39.998753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5412c1a0738d'
down_revision: Union[str, None] = 'd9ab3e2cdd15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('admins')
    op.add_column('lots', sa.Column('seller_id', sa.Integer(), nullable=True))
    op.drop_constraint('lots_saller_id_fkey', 'lots', type_='foreignkey')
    op.drop_constraint('lots_category_id_fkey', 'lots', type_='foreignkey')
    op.create_foreign_key(None, 'lots', 'users', ['seller_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'lots', 'categories', ['category_id'], ['id'], ondelete='CASCADE')
    op.drop_column('lots', 'lot_status')
    op.drop_column('lots', 'saller_id')
    op.drop_column('lots', 'lot_state')
    op.drop_constraint('stakes_lot_id_fkey', 'stakes', type_='foreignkey')
    op.drop_constraint('stakes_user_id_fkey', 'stakes', type_='foreignkey')
    op.create_foreign_key(None, 'stakes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'stakes', 'lots', ['lot_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_lot_user_id_fkey', 'user_lot', type_='foreignkey')
    op.drop_constraint('user_lot_lot_id_fkey', 'user_lot', type_='foreignkey')
    op.create_foreign_key(None, 'user_lot', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_lot', 'lots', ['lot_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('photoURL', sa.String(length=255), nullable=True))
    op.drop_column('users', 'photo')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('photo', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_column('users', 'photoURL')
    op.drop_constraint(None, 'user_lot', type_='foreignkey')
    op.drop_constraint(None, 'user_lot', type_='foreignkey')
    op.create_foreign_key('user_lot_lot_id_fkey', 'user_lot', 'lots', ['lot_id'], ['id'])
    op.create_foreign_key('user_lot_user_id_fkey', 'user_lot', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'stakes', type_='foreignkey')
    op.drop_constraint(None, 'stakes', type_='foreignkey')
    op.create_foreign_key('stakes_user_id_fkey', 'stakes', 'users', ['user_id'], ['id'])
    op.create_foreign_key('stakes_lot_id_fkey', 'stakes', 'lots', ['lot_id'], ['id'])
    op.add_column('lots', sa.Column('lot_state', postgresql.ENUM(name='state_enum'), autoincrement=False, nullable=False))
    op.add_column('lots', sa.Column('saller_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('lots', sa.Column('lot_status', postgresql.ENUM(name='status_enum'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'lots', type_='foreignkey')
    op.drop_constraint(None, 'lots', type_='foreignkey')
    op.create_foreign_key('lots_category_id_fkey', 'lots', 'categories', ['category_id'], ['id'])
    op.create_foreign_key('lots_saller_id_fkey', 'lots', 'users', ['saller_id'], ['id'])
    op.drop_column('lots', 'seller_id')
    op.create_table('admins',
    sa.Column('password', sa.VARCHAR(length=63), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=63), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='admins_pkey')
    )
    # ### end Alembic commands ###
