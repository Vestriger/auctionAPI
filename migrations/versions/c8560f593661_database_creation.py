"""Database creation

Revision ID: c8560f593661
Revises: 
Create Date: 2023-12-09 22:21:01.500811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c8560f593661'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('first_name', sa.String(length=63), nullable=False),
    sa.Column('second_name', sa.String(length=63), nullable=False),
    sa.Column('email', sa.String(length=63), nullable=False),
    sa.Column('password', sa.String(length=63), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('categories',
    sa.Column('category_name', sa.String(length=31), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('photo', sa.String(length=255), nullable=True),
    sa.Column('rating', sa.DECIMAL(precision=2, scale=1), nullable=True),
    sa.Column('balance', sa.DECIMAL(precision=7, scale=2), nullable=True),
    sa.Column('first_name', sa.String(length=63), nullable=False),
    sa.Column('second_name', sa.String(length=63), nullable=False),
    sa.Column('email', sa.String(length=63), nullable=False),
    sa.Column('password', sa.String(length=63), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('lots',
    sa.Column('name', sa.String(length=63), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('start_price', sa.DECIMAL(precision=7, scale=2), nullable=False),
    sa.Column('buyout_price', sa.DECIMAL(precision=7, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('finish_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('photos', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('address', sa.String(length=127), nullable=False),
    sa.Column('saller_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('lot_state', sa.Enum(name='state_enum'), nullable=False),
    sa.Column('delivery_type', sa.Enum(name='delivery_type_enum'), nullable=False),
    sa.Column('lot_status', sa.Enum(name='status_enum'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['saller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stakes',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('lot_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=7, scale=2), nullable=False),
    sa.Column('stake_time', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_lot',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['lot_id'], ['lots.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'lot_id', 'id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_lot')
    op.drop_table('stakes')
    op.drop_table('lots')
    op.drop_table('users')
    op.drop_table('categories')
    op.drop_table('admins')
    # ### end Alembic commands ###
